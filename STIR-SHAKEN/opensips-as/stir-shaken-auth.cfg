#
# OpenSIPS residential configuration script
#     by OpenSIPS Solutions <team@opensips-solutions.com>
#
# This script was generated via "make menuconfig", from
#   the "Residential" scenario.
# You can enable / disable more features / functionalities by
#   re-generating the scenario with different options.#
#
# Please refer to the Core CookBook at:
#      http://www.opensips.org/Resources/DocsCookbooks
# for a explanation of possible statements, functions and parameters.
#


####### Global Parameters #########

log_level=3
log_stderror=yes
log_facility=LOG_LOCAL0

udp_workers=1

/* uncomment the following lines to enable debugging */
#debug_mode=yes

/* uncomment the next line to enable the auto temporary blacklisting of 
   not available destinations (default disabled) */
#disable_dns_blacklist=no

/* uncomment the next line to enable IPv6 lookup after IPv4 dns 
   lookup failures (default disabled) */
#dns_try_ipv6=yes

/* comment the next line to enable the auto discovery of local aliases
   based on reverse DNS on IPs */
auto_aliases=no


listen=udp:eth0:5060   # CUSTOMIZE ME



####### Modules Section ########

#set module path
mpath="modules/"

#### SIGNALING module
loadmodule "signaling.so"

#### StateLess module
loadmodule "sl.so"

#### Transaction Module
loadmodule "tm.so"
modparam("tm", "fr_timeout", 5)
modparam("tm", "fr_inv_timeout", 30)
modparam("tm", "restart_fr_on_each_reply", 0)
modparam("tm", "onreply_avp_mode", 1)

#### Record Route Module
loadmodule "rr.so"
/* do not append from tag to the RR (no need for this script) */
modparam("rr", "append_fromtag", 0)

#### MAX ForWarD module
loadmodule "maxfwd.so"

#### SIP MSG OPerationS module
loadmodule "sipmsgops.so"

#### FIFO Management Interface
loadmodule "mi_fifo.so"
modparam("mi_fifo", "fifo_name", "/tmp/opensips_fifo_1")
modparam("mi_fifo", "fifo_mode", 0666)

#### USeR LOCation module
loadmodule "usrloc.so"
modparam("usrloc", "nat_bflag", "NAT")
modparam("usrloc", "working_mode_preset", "single-instance-no-db")

#### REGISTRAR module
loadmodule "registrar.so"
modparam("registrar", "tcp_persistent_flag", "TCP_PERSISTENT")
/* uncomment the next line not to allow more than 10 contacts per AOR */
#modparam("registrar", "max_contacts", 10)

loadmodule "nathelper.so"
modparam("nathelper|registrar", "received_avp", "$avp(rcv)")
modparam("nathelper", "natping_interval", 10)
modparam("nathelper", "sipping_bflag", "NAT")
modparam("nathelper", "sipping_from", "sip:astricon-2019@term-sbc.com")

#### ACCounting module
loadmodule "acc.so"
/* what special events should be accounted ? */
modparam("acc", "early_media", 0)
modparam("acc", "report_cancels", 0)
/* by default we do not adjust the direct of the sequential requests.
   if you enable this parameter, be sure to enable "append_fromtag"
   in "rr" module */
modparam("acc", "detect_direction", 0)

loadmodule "proto_udp.so"
loadmodule "dialog.so"
loadmodule "topology_hiding.so"

loadmodule "stir_shaken.so"
modparam("stir_shaken", "ca_list", "/var/tmp/stir-shaken/sti-ca/ca-cert.pem")
#modparam("stir_shaken", "ca_dir", "/var/tmp/stir-shaken/ca-dir")
loadmodule "tls_mgm.so"

####### Routing Logic ########

# main request routing logic

route{
	if ($si !~ "^(127|172)") {
		xlog("[$ci] dropping unrecognized $rm from $si:$sp\n");
		drop;
	}

	if (!mf_process_maxfwd_header(10)) {
		send_reply(483,"Too Many Hops");
		exit;
	}

	if (has_totag()) {

		# handle hop-by-hop ACK (no routing required)
		if ( is_method("ACK") && t_check_trans() ) {
			t_relay();
			exit;
		}

		# sequential request within a dialog should
		# take the path determined by record-routing
		if ( !match_dialog() ) {
			# we do record-routing for all our traffic, so we should not
			# receive any sequential requests without Route hdr.
			send_reply(404,"Not here");
			exit;
		}

		if (is_method("BYE")) {
			# do accounting even if the transaction fails
			do_accounting("log","failed");
		}

		# route it out to whatever destination was set by loose_route()
		# in $du (destination URI).
		route(relay);
		exit;
	}

	# CANCEL processing
	if (is_method("CANCEL")) {
		if (t_check_trans())
			t_relay();
		exit;
	}

	# absorb retransmissions, but do not create transaction
	t_check_trans();

	# preloaded route checking
	if (loose_route()) {
		xlog("L_ERR",
			"Attempt to route with preloaded Route's [$fu/$tu/$ru/$ci]");
		if (!is_method("ACK"))
			send_reply(403,"Preload Route denied");
		exit;
	}

	if (is_method("REGISTER")) {
		if (!save("location"))
			sl_reply_error();
		exit;
	}

	# record routing
	if (!is_method("INVITE")) {
		send_reply(501, "Not Implemented");
		exit;
	}

	create_dialog();
	topology_hiding();
	do_accounting("log");

	if ($rU==NULL) {
		# request with no Username in RURI
		send_reply(484,"Address Incomplete");
		exit;
	}

	route(TRUSTED_CERT);
	#route(EXPIRED_CERT);
	#route(FUTURE_CERT);
	#route(UNKNOWN_CERT);

	route(TRUSTED_KEY);
	#route(UNKNOWN_KEY);

	if (stir_shaken_auth("A", "4437c7eb-8f7a-4f0e-a863-f53a0e60251a",
		$var(cert), $var(privKey), "http://opensips.opensipit.net/cert.pem")) {
		xlog("XXXX auth OK\n");
	} else {
		xlog("XXXX auth FAILED\n");
		send_reply(400, "Bad Request");
	}

	# OpenSIPS VS
	sethostport("opensips.opensipit.net:5070");
	#sethostport("sippy_gob2b.opensipit.net:5080");
	#sethostport("freeswitch.opensipit.net:5060");
	#sethostport("kamailio.opensipit.net:5060");
	#sethostport("asterisk.opensipit.net:5060");

	$rU = $tU;

	# OpenSIPS MITM >:)
	#$du = "sip:172.31.28.221:5080";

	# when routing via usrloc, log the missed calls also
	do_accounting("log","missed");
	route(relay);
}


route[relay] {
	# for INVITEs enable some additional helper routes
	if (is_method("INVITE")) {
		t_on_branch("per_branch_ops");
		t_on_reply("handle_nat");
		t_on_failure("missed_call");
	}

	if (!t_relay()) {
		send_reply(500,"Internal Error");
	}
	exit;
}


branch_route[per_branch_ops] {
	xlog("new branch at $ru\n");
}


onreply_route[handle_nat] {
	xlog("incoming reply\n");
	fix_nated_contact();
}


failure_route[missed_call] {
	if (t_was_cancelled()) {
		exit;
	}

	# uncomment the following lines if you want to block client 
	# redirect based on 3xx replies.
	##if (t_check_status("3[0-9][0-9]")) {
	##t_reply(404,"Not found");
	##	exit;
	##}

	
}



route [TRUSTED_CERT] {
	$var(cert) = "-----BEGIN CERTIFICATE-----
MIIByzCCAXGgAwIBAgIUXDt6EC0OixT1iRSSPV3jB/zQAlYwCgYIKoZIzj0EAwIw
RTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoMGElu
dGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0yMTA0MTMwNjM3NTBaFw0yMzA3MTcw
NjM3NTBaMGoxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJWQTESMBAGA1UEBwwJU29t
ZXdoZXJlMRowGAYDVQQKDBFBY21lVGVsZWNvbSwgSW5jLjENMAsGA1UECwwEVk9J
UDEPMA0GA1UEAwwGU0hBS0VOMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE6d6M
01nUoOV+S35u/z3+lvrjOew+vvMmOc2zG5a7agY7ThmPD3qtFpiU0QysKYiXCfcf
jzEajMzY8mf3R++rraMaMBgwFgYIKwYBBQUHARoECjAIoAYWBDEwMDQwCgYIKoZI
zj0EAwIDSAAwRQIhAKNB2u441FsU4oUarnlrmGDED645GAMUatZ8iHTJmfueAiBd
het8flEquv8RIwotTCbGlN8nq3V+Rr6oVeeIi2bZ1g==
-----END CERTIFICATE-----";
}

route [EXPIRED_CERT] {
	$var(cert) = "-----BEGIN CERTIFICATE-----
MIIBzDCCAXGgAwIBAgIUVE3Rsda/WIXDxnUlSq2hfueiSsswCgYIKoZIzj0EAwIw
RTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoMGElu
dGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0xOTAxMDEwMDEwMzRaFw0yMTA0MDUw
MDEwMzRaMGoxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJWQTESMBAGA1UEBwwJU29t
ZXdoZXJlMRowGAYDVQQKDBFBY21lVGVsZWNvbSwgSW5jLjENMAsGA1UECwwEVk9J
UDEPMA0GA1UEAwwGU0hBS0VOMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE6d6M
01nUoOV+S35u/z3+lvrjOew+vvMmOc2zG5a7agY7ThmPD3qtFpiU0QysKYiXCfcf
jzEajMzY8mf3R++rraMaMBgwFgYIKwYBBQUHARoECjAIoAYWBDEwMDQwCgYIKoZI
zj0EAwIDSQAwRgIhAL4Ry3oKOOkJziD7emgqqmut/Gx/fWp5IPxFdM3wkmt0AiEA
+zEd5RHO02KJHptfsvD3WwHmXXctGh0xXb7ju6Khtjg=
-----END CERTIFICATE-----";
}

route [FUTURE_CERT] {
	$var(cert) = "-----BEGIN CERTIFICATE-----
MIIByzCCAXGgAwIBAgIUVE3Rsda/WIXDxnUlSq2hfueiStAwCgYIKoZIzj0EAwIw
RTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoMGElu
dGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0yNjAxMDEwMDAyMTJaFw0yODA0MDUw
MDAyMTJaMGoxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJWQTESMBAGA1UEBwwJU29t
ZXdoZXJlMRowGAYDVQQKDBFBY21lVGVsZWNvbSwgSW5jLjENMAsGA1UECwwEVk9J
UDEPMA0GA1UEAwwGU0hBS0VOMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE6d6M
01nUoOV+S35u/z3+lvrjOew+vvMmOc2zG5a7agY7ThmPD3qtFpiU0QysKYiXCfcf
jzEajMzY8mf3R++rraMaMBgwFgYIKwYBBQUHARoECjAIoAYWBDEwMDQwCgYIKoZI
zj0EAwIDSAAwRQIhAOxYJS2CFgFXDA7Splhu7WXafkEm9TrmNEItzu8mfL1DAiBm
wdgmH2RxGpgEjLw7b6i78Bo4YURv8vN9XF8ImFVQkA==
-----END CERTIFICATE-----";
}

route [UNKNOWN_CERT] {
	$var(cert) = "-----BEGIN CERTIFICATE-----
MIIByzCCAXGgAwIBAgIUXtaSLz3PT6b3R82g+0+lmQQlHfYwCgYIKoZIzj0EAwIw
RTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoMGElu
dGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0yMTA0MTMwMDA4NTlaFw0yMzA3MTcw
MDA4NTlaMGoxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJWQTESMBAGA1UEBwwJU29t
ZXdoZXJlMRowGAYDVQQKDBFBY21lVGVsZWNvbSwgSW5jLjENMAsGA1UECwwEVk9J
UDEPMA0GA1UEAwwGU0hBS0VOMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEaSRx
apeMZxGMWCif9d8iasnPcOEc58+MiAsTKfxgZUjyZznfevpogWoQc6/0aN/96aKe
cK4zJT3s3D/PMdnI26MaMBgwFgYIKwYBBQUHARoECjAIoAYWBDEwMDQwCgYIKoZI
zj0EAwIDSAAwRQIgUESIkBFvkPCp0VEUsUWhurSumgIiw7tzSPKrkrgTjYgCIQD7
zO1Kfbrufjuc0DmHnevhFJNEojzwX2cD7QUVA8/9WQ==
-----END CERTIFICATE-----";
}

route [TRUSTED_KEY] {
	$var(privKey) = "-----BEGIN EC PRIVATE KEY-----
MHcCAQEEIHuHdbIElB/3wirYg68bbZaQ3GJWybOYHWF2X9+VnFDUoAoGCCqGSM49
AwEHoUQDQgAE6d6M01nUoOV+S35u/z3+lvrjOew+vvMmOc2zG5a7agY7ThmPD3qt
FpiU0QysKYiXCfcfjzEajMzY8mf3R++rrQ==
-----END EC PRIVATE KEY-----";
}

route [UNKNOWN_KEY] {
	$var(privKey) = "-----BEGIN EC PRIVATE KEY-----
MHcCAQEEIJIBo4GFxXpEeixpfmJv7DAlKOi6Tk0itGaxQykFyEksoAoGCCqGSM49
AwEHoUQDQgAEaSRxapeMZxGMWCif9d8iasnPcOEc58+MiAsTKfxgZUjyZznfevpo
gWoQc6/0aN/96aKecK4zJT3s3D/PMdnI2w==
-----END EC PRIVATE KEY-----";
}
