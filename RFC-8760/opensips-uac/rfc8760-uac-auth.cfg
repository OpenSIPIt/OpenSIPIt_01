# BSD 2-Clause License
#
# Copyright (c) 2021, OpenSIPIt
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

log_level = 4
log_stderror = yes
log_facility = LOG_LOCAL0

memdump = 2
udp_workers = 4

auto_aliases = no

listen = udp:172.31.28.221:5080
alias = udp:opensipit.org:5080

####### Modules Section ########

mpath = "modules/"

loadmodule "signaling.so"
loadmodule "statistics.so"
loadmodule "sl.so"

loadmodule "tm.so"
modparam("tm", "fr_timeout", 5)
modparam("tm", "fr_inv_timeout", 30)
modparam("tm", "restart_fr_on_each_reply", 0)
modparam("tm", "onreply_avp_mode", 1)

loadmodule "rr.so"

loadmodule "maxfwd.so"
loadmodule "sipmsgops.so"

loadmodule "mi_fifo.so"
modparam("mi_fifo", "fifo_name", "/tmp/opensips_fifo_2")
modparam("mi_fifo", "fifo_mode", 0666)

loadmodule "registrar.so"
loadmodule "usrloc.so"

loadmodule "httpd.so"
modparam("httpd", "port", 8080)
loadmodule "mi_http.so"

loadmodule "dialog.so"
modparam("dialog", "dlg_match_mode", 1)
modparam("dialog", "options_ping_interval", 50)

loadmodule "acc.so"
modparam("acc", "early_media", 0)
modparam("acc", "report_cancels", 0)
modparam("acc", "detect_direction", 0)
modparam("acc", "acc_created_avp_name", "call_created_avp")

loadmodule "proto_udp.so"
loadmodule "proto_tcp.so"

loadmodule "db_mysql.so"
loadmodule "auth.so"
loadmodule "uac.so"
loadmodule "uac_auth.so"
modparam("uac_auth", "credential", "1001:freeswitch.opensipit.net:openz1ps760D90958qa")
modparam("uac_auth", "credential", "1001:172.31.28.221:openz1ps760D90958qa")

route {
	if (!mf_process_maxfwd_header(10)) {
		sl_send_reply(483, "Too Many Hops");
		exit;
	}

	if (has_totag())
		exit;

	if (is_method("CANCEL")) {
		if (t_check_trans())
			t_relay();
		exit;
	}

	t_check_trans();

	# preloaded route checking
	if (loose_route()) {
		xlog("[$ci] Attempt to route with preloaded Routes [$fu/$tu/$ru/$ci]");
		if (!is_method("ACK"))
			sl_send_reply(403, "Preloaded Route Denied");
		exit;
	}

	if (!is_method("INVITE|REGISTER")) {
		send_reply(405, "Method Not Allowed");
		exit;
	}

	$ru = "sip:933@freeswitch.opensipit.net";

	t_on_failure("uac_auth_fail");
	t_relay();
	exit;
}

failure_route [uac_auth_fail] {
 if (t_check_status("40[17]")) {
	$var(accept_algs) = "md5,sha-256,sha-512-256";
        if (uac_auth($var(accept_algs))) {
            xlog("XXXXXXXXXX SUCCESS\n");
            t_on_failure("uac_auth_fail");
            t_relay();
            exit;
        } else {
            xlog("  XXXXXXXXXXXX   uac_auth() FAILURE\n");
        }
    }
}
